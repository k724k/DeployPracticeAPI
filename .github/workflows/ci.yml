name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: DeployPracticeAPI
          MYSQL_ROOT_PASSWORD: 0903
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -p0903"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # 1. 코드 Checkout
      - name: Checkout code
        uses: actions/checkout@v4
      # 2. JDK 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      # 3. Gradle 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      # 4. MySQL 준비 대기
      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h127.0.0.1 -uroot -p0903 --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting ($i)..."
            sleep 2
          done
      # 5. Build & Test
      - name: Build and Test
        run: ./gradlew build test
      # 6. 빌드 산출물 업로드
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build/libs/*.jar   # Gradle 기본 빌드 산출물 위치

      # 7. AWS ECR 로그인
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          region: ${{ secrets.AWS_REGION }}  # 이 줄 꼭 추가

      # 8. Docker 이미지 빌드
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }}:latest .

      # 9. ECR용 태그 붙이기
      - name: Tag Docker image for ECR
        run: |
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest

      # 10. Docker push to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest








